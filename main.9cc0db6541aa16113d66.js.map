{"version":3,"sources":["webpack:///./index.js"],"names":["delay","time","Promise","resolve","setTimeout","logger","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","logger2","table","makeTransaction","transaction","min","max","Math","floor","random","id","reject","logSuccess","logError","warn","amount","catch"],"mappings":"yLAIMA,EAAQ,SAAAC,GACV,OAAO,IAAIC,SAAQ,SAACC,GACbC,YAAW,WACXD,EAAQF,KACTA,OAKJI,EAAS,SAAAJ,GAAI,OAAIK,QAAQC,IAAR,kBAA8BN,EAA9B,OAEvBD,EAAM,KAAMQ,KAAKH,GACjBL,EAAM,KAAMQ,KAAKH,GACjBL,EAAM,MAAMQ,KAAKH,GAIjB,IAAMI,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GAC/B,IAAMC,EAAeF,EAASG,KAAI,SAAAC,GAAI,OACtCA,EAAKP,OAASI,EAAd,iBAA8BG,EAA9B,CAAoCN,QAASM,EAAKN,SAAWM,KAC7D,OAAOf,QAAQC,QAAQY,IAIrBG,EAAU,SAAAH,GAAY,OAAIT,QAAQa,MAAMJ,IAI9CH,EAAgBH,EAAO,SAASD,KAAKU,GACrCN,EAAgBH,EAAO,OAAOD,KAAKU,GAInC,IAIME,EAAkB,SAACC,GACvB,IALiCC,EAAKC,EAKhCtB,GAL2BqB,EAKM,IALDC,EAKM,IAJrCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAK9CK,EAAKN,EAAYM,GAevB,OAbkB,IAAIzB,SAAQ,SAACC,EAASyB,GAClCxB,YAAW,WAEYoB,KAAKE,SAAW,GAE/BvB,EAAQ,CAACwB,KAAI1B,SAEb2B,EAAOD,KAGZ1B,OAML4B,EAAa,SAAC,GAAiB,IAAfF,EAAe,EAAfA,GAAI1B,EAAW,EAAXA,KACxBK,QAAQC,IAAR,eAA2BoB,EAA3B,iBAA8C1B,EAA9C,OAGI6B,EAAU,SAACH,GACfrB,QAAQyB,KAAR,gCAA6CJ,EAA7C,8BAMFP,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETV,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETV,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,KAC/BxB,KAAKqB,GACLI,MAAMH,GAETV,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,K","file":"main.9cc0db6541aa16113d66.js","sourcesContent":["import './styles.css';\r\n\r\n// task 1 ***********************\r\n\r\nconst delay = time => {\r\n    return new Promise((resolve) => {\r\n           setTimeout(() => {\r\n           resolve(time)\r\n        },time)\r\n    })\r\n\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger);\r\ndelay(1000).then(logger);\r\ndelay(1500).then(logger);\r\n\r\n// task 2 ***************************\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    const updatedUsers = allUsers.map(user =>\r\n    user.name === userName ? { ...user, active: !user.active } : user,);\r\n    return Promise.resolve(updatedUsers);\r\n\r\n};\r\n\r\nconst logger2 = updatedUsers => console.table(updatedUsers);\r\n/*\r\n * Должно работать так\r\n */\r\ntoggleUserState(users, 'Mango').then(logger2);\r\ntoggleUserState(users, 'Lux').then(logger2);\r\n\r\n// task 3 *******************************\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n  const time = randomIntegerFromInterval(200, 500);\r\n  const id = transaction.id;\r\n    \r\n    const promise = new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n\r\n            const canProcess = Math.random() > 0.3;\r\n            if (canProcess) {\r\n                resolve({id, time});\r\n            } else {\r\n                reject(id);\r\n            }\r\n\r\n        }, time);\r\n    });\r\n    \r\n  return promise;\r\n};\r\n\r\nconst logSuccess = ({ id, time }) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError =(id)=> {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);"],"sourceRoot":""}